{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>\u8fd9\u91cc\u662f xzqbear \u7684\u6570\u5b66\u7b14\u8bb0\u535a\u5ba2\u5b58\u653e\u7ad9\uff0c\u672c\u7ad9\u7531 <code>mkdocs</code> \u751f\u6210\uff0c\u73b0\u5728\u4ecd\u7136\u5728\u66f4\u65b0\u5f53\u4e2d.</p>"},{"location":"#_1","title":"\u5173\u4e8e\u6211","text":"<p>\u6211\u662f\u6765\u81eaNKU\u7684\u4e00\u540d\u6570\u5b66\u7cfb\u5927\u7c7b\u5b66\u751f\uff0c\u559c\u6b22\u6570\u5b66\u4e0e\u6280\u672f\uff0c\u4ee5\u4e0b\u662f\u8054\u7cfb\u6211\u7684\u4e00\u4e9b\u65b9\u5f0f\uff1a</p> <ul> <li> NKU\u90ae\u7bb1(Email) \uff1a <code>xzqbear@mail.nankai.edu.cn</code></li> <li> Github \u4e2a\u4eba\u4e3b\u9875\uff1axiong-ZH-zq (xzqbear) (github.com)</li> </ul> <p>\u8fd9\u91cc\u7684\u7b14\u8bb0\u5185\u5bb9\u4e3b\u8981\u662fNKU\u6570\u5b66\u7c7b\u8bfe\u7a0b\u7684\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u53c2\u8003\u7684\u6559\u6750\u4e5f\u4e0d\u4ec5\u4ec5\u53ea\u5c40\u9650\u4e8eNKU\u4f7f\u7528\u7684\u6559\u6750\u3002</p> <p>\u5982\u679c\u559c\u6b22\u8fd9\u4e2a\u7b14\u8bb0\u5b58\u653e\u7ad9\uff0c\u6b22\u8fce\u7ed9\u4e00\u4e2a Star  \u6216\u8005 Fork  \u8fd9\u4e2a\u4ed3\u5e93\u3002</p>"},{"location":"#_2","title":"\u5173\u4e8e\u672c\u7ad9","text":""},{"location":"#_3","title":"\u9605\u8bfb\u63d0\u9192","text":"<p>\u5982\u679c\u60f3\u628a\u6587\u5b57\u6216\u8005\u516c\u5f0f\u4fdd\u7559\u4e0b\u6765\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165 Github \u6e90\u4ee3\u7801\u4ed3\u5e93\u4e0b\u8f7d md \u6587\u4ef6\u3002</p> <p>\u5982\u679c\u4f60\u4e5f\u4f7f\u7528 Obsidian \u7684\u8bed\u6cd5\u5199\u7b14\u8bb0\uff0c\u53ef\u4ee5\u76f4\u63a5\u6284\u6211\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"#_4","title":"\u5efa\u7ad9\u5386\u7a0b","text":"<ul> <li>2023-12-18 \u672c\u7ad9\u5efa\u6210\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e2a\u4eba\u5b66\u4e60\u6570\u5b66\u7684\u4e00\u4e2a\u5c0f\u8bb0\u5f55.</li> </ul>"},{"location":"#_5","title":"\u672c\u7ad9\u7684\u5efa\u7ad9\u6d41\u7a0b","text":"<p>\u6211\u66fe\u5148\u540e\u5c1d\u8bd5\u8fc7\u5f88\u591a\u535a\u5ba2\uff0c\u4f46\u662f\u6700\u7ec8\u6211\u8fd8\u662f\u9009\u62e9\u4e86 mkdocs \u9759\u6001\u535a\u5ba2\u7684\u65b9\u6848\u3002</p> <p>\u6700\u5f00\u59cb\u6211\u9009\u62e9\u4e86\u535a\u5ba2\u56ed\uff0c\u535a\u5ba2\u56ed\u975e\u5e38\u7b80\u6d01\u660e\u4e86\uff0c\u6ce8\u518c\u8d26\u53f7\u7533\u8bf7\u535a\u5ba2\u4e4b\u540e\u5c31\u4e0d\u5b58\u5728\u591a\u4f59\u7684\u914d\u7f6e\u73af\u8282\uff0c\u57fa\u672c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u5199\u4f5c\uff0c\u4f46\u662f\u4e3b\u9898\u592a\u4e11\uff0c\u5bfc\u81f4\u6211\u4e00\u5f00\u59cb\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u6298\u817e\u540e\u53f0\u7684CSS\u548cHTML\uff0c\u540e\u6765\u53d1\u73b0\u5b9e\u9645\u4e0a\u8fd9\u662f\u672c\u672b\u5012\u7f6e\u7684\uff0c\u535a\u5ba2\u6700\u91cd\u8981\u7684\u4e00\u70b9\u8fd8\u662f\u80fd\u6301\u7eed\u4ea7\u51fa\uff0c\u8352\u5e9f\u4e86\u4ea7\u51fa\u4e5f\u5c31\u4f1a\u8352\u5e9f\u4e86\u5b66\u4e60\u3002</p> <p>\u518d\u540e\u6765\uff0c\u6211\u9009\u62e9\u5728 Obsidian \u91cc\u9762\u8fdb\u884c\u7b14\u8bb0\u64b0\u5199\uff0c\u867d\u7136 Obsidian \u91cc\u9762\u914d\u7f6e\u597d\u987a\u624b\u7684\u63d2\u4ef6\u4e4b\u540e\u4f53\u9a8c\u5f88\u597d\uff0c\u6211\u8fd8\u662f\u5728\u60f3\u201c\u5982\u4f55\u53d1\u5e03\u7b14\u8bb0\u201d\u8fd9\u4ef6\u4e8b\u60c5\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u662f\u4e00\u79cd\u5f00\u6e90\u7cbe\u795e\uff0c\u4e0d\u7ba1\u662f\u5f00\u6e90\u4ee3\u7801\u8fd8\u662f\u5f00\u6e90\u6240\u8c13\u7684\u201c\u77e5\u8bc6\u201d\uff0c\u4e92\u8054\u7f51\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u77e5\u8bc6\u5b9d\u5e93\uff0c\u4f46\u662f\u5982\u4eca\u7684\u56fd\u5185\u4e92\u8054\u7f51\u73af\u5883\u4e0b\uff0c\u5374\u96be\u89c1\u5230\u826f\u597d\u7684\u77e5\u8bc6\u5206\u4eab\u73af\u5883\u3002\u867d\u7136\u6211\u4e0d\u53cd\u5bf9\u751a\u81f3\u5b8c\u5168\u63d0\u5021\u77e5\u8bc6\u4ed8\u8d39\uff0c\u4f46\u662f\u56fd\u5185\u67d0\u4e9b\u5e73\u53f0\u5c06\u56fd\u5916\u514d\u8d39\u5c31\u80fd\u83b7\u53d6\u5230\u7684\u77e5\u8bc6\u64b7\u53d6\u4e00\u4e9b\u5c31\u76f4\u63a5\u9ad8\u4ef7\u552e\u5356\u5b9e\u5728\u8ba9\u4eba\u96be\u4ee5\u5fcd\u53d7\u3002\u5728\u201c\u5f00\u6e90\u7cbe\u795e\u201d\u6700\u76db\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5c1a\u4e14\u5982\u6b64\uff0c\u6570\u5b66\u7b49\u7406\u5b66\u7c7b\u5b66\u79d1\u53ea\u6015\u66f4\u662f\u60e8\u4e0d\u5fcd\u7779\u4e86\uff0c\u56fd\u5916\u793e\u533a math stack exchange\uff08\u4ee5\u4e0b\u7b80\u79f0 MSE\uff09 \u9762\u524d\uff0c\u56fd\u5185\u7684\u6570\u5b66\u77e5\u8bc6\u4ea4\u6d41\u793e\u533a\u6ca1\u6709\u4e00\u4e2a\u80fd\u6253\u7684\uff0c\u6bcf\u6bcf\u5728\u6d4f\u89c8 MSE \u7684\u65f6\u5019\uff0c\u6211\u90fd\u5728\u60f3\u201c\u5982\u679c\u56fd\u5185\u6709\u76f8\u540c\u7c7b\u578b\u7684\u793e\u533a\u5c31\u597d\u4e86\u201d\uff0c\u53ea\u4e0d\u8fc7\u4ece\u56fd\u5185\u7684\u4e92\u8054\u7f51\u73af\u5883\u6765\u770b\uff0c\u8fd9\u4f30\u8ba1\u53ea\u80fd\u662f\u7a7a\u60f3\u3002</p> <p>\u6211\u4e00\u5f00\u59cb\u4f7f\u7528 Obsidian \u7684 Webpage Export \u63d2\u4ef6\u8fdb\u884c\u7f51\u9875\u5bfc\u51fa\uff0c\u7136\u540e\u76f4\u63a5\u653e\u5728 Github Pages \u4e0a\u76f4\u63a5\u8fdb\u884c\u6258\u7ba1\uff0c\u4e00\u5f00\u59cb\u5012\u662f\u6bd4\u8f83\u6b63\u5e38\uff0c\u4f46\u662f\u65f6\u95f4\u4e45\u4e86\u6211\u624d\u53d1\u73b0\uff1a\u6587\u4ef6\u7a0d\u5fae\u591a\u8d77\u6765\u5c31\u57fa\u672c\u65e0\u6cd5\u66f4\u6539\uff0c\u6bcf\u6b21\u4fee\u6539\u4e86\u7b14\u8bb0\u4e4b\u540e\u90fd\u9700\u8981\u76f4\u63a5\u5220\u9664\u6e90\u6587\u4ef6\uff0c\u518d\u628a\u4fee\u6539\u4e4b\u540e\u7684\u6587\u4ef6\u653e\u4e0a\u53bb\uff0c\u8fd9\u6839\u672c\u4e0d\u5b58\u5728\u201c\u7ba1\u7406\u201d\uff0c\u56e0\u6b64\u6ca1\u51e0\u5929\u6211\u5c31\u653e\u5f03\u4e86\u3002\u8f6c\u800c\u8003\u8651\u7c7b\u4f3c Digital Garden \u548c Obsius \u8fd9\u6837\u7684\u63d2\u4ef6\uff0c\u6709\u4e00\u4e2a\u901a\u75c5\u5c31\u5728\u4e8e\uff1a\u81ea\u7531\u5ea6\u4f4e\uff0c\u53d7\u9650\u4e8e\u56fd\u5185\u7684\u7f51\u7edc\u73af\u5883\uff08\u8fd9\u4e0d\u53ea\u662f\u6302\u68af\u5b50\u5c31\u80fd\u5f25\u5408\u7684\uff09\uff0c\u800c\u4e14\u7f3a\u4e4f\u4e86\u4ea4\u6d41\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u8bc4\u8bba\u7cfb\u7edf\uff0c\u8fd9\u6837\u6bd4\u535a\u5ba2\u56ed\u5f3a\u5728\u54ea\u5462\uff1f</p> <p>\u6700\u7ec8\u6211\u9009\u62e9\u4e86 Mkdocs \uff0c\u56e0\u4e3a\u6211\u5e38\u7528\u7684\u8bed\u8a00\u5c31\u662f Python \uff0c\u5e76\u4e14\u4e00\u4e9b\u9002\u914d Obsidian \u7684\u63d2\u4ef6\u4e5f\u5e2e\u6211\u642d\u5efa\u597d\u4e86\u5de5\u4f5c\u6d41\u3002\u6211\u770b\u5230\u4e86\u4e00\u4e9b\u770b\u8d77\u6765\u66f4\u597d\u7684\u5de5\u4f5c\u6d41\uff0c\u7c7b\u4f3c quartz \uff08\u7b97\u662f\u65e0\u7f1d\u8854\u63a5 Obsidian\uff09\uff0c\u4f46\u662f\u6709\u4e2a\u95ee\u9898\u5728\u4e8e\u5b83\u6ca1\u6709\u8bc4\u8bba\u7cfb\u7edf\uff0c\u540c\u65f6\u5b83\u662f Javascript \u7684\u94fe\u6761\uff0c\u4e0d\u65b9\u4fbf\u81ea\u5b9a\u4e49\u3002</p> <p>\u6700\u540e\uff0c\u5728\u4e4b\u540e\u7684\u65e5\u5b50\u91cc\uff0c\u5982\u679c\u6211\u80fd\u901a\u8fc7\u8fd9\u91cc\u7684\u6587\u5b57\u5e2e\u52a9\u5230\u54ea\u6015\u4e00\u4e2a\u4eba\uff0c\u90fd\u4e0d\u7b97\u662f\u767d\u8d39\u529b\u6c14\u4e86\u3002</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/","title":"Havard Stat 110 Lecture 2","text":"","tags":["Probability Theory"]},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/#story-proofs-axioms-of-probability","title":"Story Proofs, Axioms of Probability","text":"","tags":["Probability Theory"]},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/#some-hints","title":"Some hints","text":"<p>Some hints and comments:</p> <ul> <li>00:09 Don't lose your common sense (And not only rely on them).</li> <li>02:38 Do check answer (By doing simple and extreme cases).</li> <li>04:05 Label people and objects.</li> </ul>","tags":["Probability Theory"]},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/#order-does-not-matter-with-replacement","title":"Order does not matter with replacement","text":"<p>13:15 </p> <p>Pick \\(k\\) times from set of \\(n\\) objects where order does not matter with replacement.</p> <p>There are about \\(\\binom{n+k-1}{k}\\) ways to pick.</p> <p>22:40  Imagine put \\(k\\) balls into \\(n\\) boxes. </p> <p>29:30 Extra: Bose-Einstein condensate (Bose-Einstein \u51dd\u805a\u6001) </p>","tags":["Probability Theory"]},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/#story-proof","title":"Story Proof","text":"<p>31:16 </p> <p>Example 1</p> <p>Use story proof to prove \\(\\displaystyle\\binom{n}{k} = \\binom{n}{n-k}\\)</p> <p>This is easy as we can consider divide \\(n\\) people into two teams: one contains \\(k\\) people and the other one contains \\(n-k\\) people.</p> <p>32:14 </p> <p>example 2</p> <p>Prove  $$ n\\binom{n-1}{k-1} = k\\binom{n}{k} $$</p> <p>Consider the story below:</p> <p>Pick \\(k\\) people out of \\(n\\) , with \\(1\\) designated as President.</p> <p>The solution is obviously</p> \\[ k\\binom{n}{k} \\] <p>And transform the view of the problem:</p> <ul> <li>First choose \\(1\\) President, which has \\(n\\) ways.</li> <li>Then choose \\(k-1\\) people from \\(n-1\\) people.</li> </ul> <p>35:06 </p> <p>Example 3 (Vander Monde)</p> <p>Prove $$ \\binom{m+n}{k} = \\sum\\limits_{j=0}^k \\binom{m}{j}\\binom{n}{k-j} $$</p> <p>The left annotation means: choose \\(k\\) people from \\(m+n\\) people. </p> <p>Then we consider divide \\(m+n\\) people into two groups: first contains \\(m\\) people and second contains \\(n\\) people. Next choose \\(j\\) people from first one and \\(k-j\\) people second one.</p>","tags":["Probability Theory"]},{"location":"blog/2024/02/18/havard-stat-110-lecture-2/#non-naive-probability-axioms","title":"Non-naive Probability Axioms","text":"<p>39:15 Non-naive definition</p> <p>Non-naive Definition of Probability</p> <p>A Probability Sample consists of \\(S\\) and \\(P\\), where \\(S\\) is a sample space and \\(P\\) is a function which takes an event \\(A\\subset S\\) as input, returns \\(P(A)\\in [0,1]\\) as outputs such that:</p> <ol> <li>\\(P(\\varnothing) = 0\\) , \\(P(S)=1\\) .</li> <li>\\(\\displaystyle P\\left(\\bigcup_{n=1}^\\infty A_n\\right) = \\sum\\limits_{n=1}^\\infty P(A_n)\\) if \\(A_j\\) are disjoint.</li> </ol>","tags":["Probability Theory"]},{"location":"blog/2024/02/19/havard-stat-110-lecture-3/","title":"Havard Stat 110 Lecture 3","text":"","tags":["Probability Theory"]},{"location":"blog/2024/02/19/havard-stat-110-lecture-3/#birthday-problem","title":"Birthday Problem","text":"<p>00:49 \\(K\\) people, find probability that share same birthday. Exclude Feb. 29th and assume other 365 days equally likely and independence.</p> <p>Obviously if \\(K&gt;365\\) , the probability is \\(1\\).</p> <p>Let \\(K\\leqslant 365\\) , consider \\(P(\\text{no match})\\) :</p> \\[ P(\\text{no match}) = \\dfrac{365\\times 364\\times \\cdots (365-K+1)}{365^K} \\] <p>So \\(1-P(\\text{no match}) = P(\\text{match})\\) .</p> <p>Compute this result and we can get that:</p> \\[ P(\\text{match}) =  \\begin{cases}50.7\\% , &amp;K=23 \\\\ 97\\% , &amp;K=50 \\\\ 99.999\\% , &amp;K=100 \\end{cases} \\]","tags":["Probability Theory"]},{"location":"blog/2024/02/19/havard-stat-110-lecture-3/#properties-of-probability","title":"Properties of Probability","text":"<p>22:46 </p> <ol> <li>\\(P(\\overline{A}) = 1-P(A)\\) .</li> <li>If \\(A\\subseteq B\\) (If \\(A\\) occurs that \\(B\\) occurs), then \\(P(A)\\leqslant P(B)\\) .</li> <li>\\(P(A\\cup B) = P(A)+P(B)-P(A\\cap B)\\) . (For proof, consider \\(P(A\\cup B) = P(A)+P(B\\cap \\overline{A})\\)) .</li> <li> \\[ \\begin{aligned}P(A\\cup B\\cup C) &amp;= P(A)+P(B)+P(C) \\\\ &amp;- P(A\\cap B)-P(A\\cap C)-P(B\\cap C)\\\\ &amp;+P(A\\cap B\\cap C)\\end{aligned} \\] </li> </ol>","tags":["Probability Theory"]},{"location":"blog/2024/02/19/havard-stat-110-lecture-3/#de-montmorts-problem","title":"de Montmort's Problem","text":"<p>38:48 \\(n\\) cards, labeled \\(1,2,\\cdots,n\\) . Let \\(A_j\\) be the event \"\\(j\\)-th card matches\". So we need to compute \\(P(A_1\\cup A_2\\cdots \\cup A_n)\\) .</p> <p>\\(P(A_j) = \\dfrac{1}{n}\\) since all position equally likely for card labled \\(j\\) .</p> <p>\\(P(A_1\\cap A_2) = \\dfrac{(n-2)!}{n!}\\) as we can consider the first and the second one are fixed.</p> <p>So \\(\\displaystyle P\\left(\\bigcap_{k=1}^n A_k\\right) = \\dfrac{(n-k)!}{n!}\\) .  </p> <p>Thus we can compute that:</p> \\[ \\begin{aligned} P(A_1\\cup A_2\\cdots \\cup A_n)  &amp;= n\\frac{1}{n}- \\frac{n(n-1)}{2!}\\frac{1}{n(n-1)}\\cdots+(-1)^{n+1}\\binom{n}{n}\\frac{(n-n)!}{n!} \\\\ &amp;= 1- \\frac{1}{2!}+ \\frac{1}{3!}-\\cdots+(-1)^{n+1} \\frac{1}{n!} \\\\ &amp;\\approx 1-\\frac{1}{\\mathrm{e}} \\end{aligned} \\]","tags":["Probability Theory"]},{"location":"blog/2024/02/20/havard-stat-101-lecture-4---conditional-probability/","title":"Havard Stat 101 Lecture 4 - Conditional Probability","text":"","tags":["Probability Theory"]},{"location":"blog/2024/02/20/havard-stat-101-lecture-4---conditional-probability/#independence","title":"Independence","text":"<p>10:49 </p> <p>Definition: Independence</p> <p>Events \\(A\\), \\(B\\) are independent if \\(P(A\\cap B) = P(A)P(B)\\) .</p> <p>Note</p> <p>It is completely different from disjointness.</p> <p>\\(A,B,C\\) are independent if</p> \\[ \\begin{aligned} &amp;P(AB) = P(A)P(B), \\\\ &amp;P(BC) = P(B)P(C), \\\\ &amp;P(AC) = P(A)P(C), \\\\ &amp;P(ABC) = P(A)P(B)P(C). \\end{aligned} \\] <p>Similarly for events \\(A_1,A_2,\\cdots,A_n\\) , means all multiply rules hold.</p>","tags":["Probability Theory"]},{"location":"blog/2024/02/20/havard-stat-101-lecture-4---conditional-probability/#newton-pepys-problem-1693","title":"Newton-Pepys Problem (1693)","text":"<p>18:22 We have a fair dice, which is most likely below?</p> <ol> <li>A. At least one \\(6\\) with \\(6\\) dices;</li> <li>B. At least two \\(6\\) with \\(12\\) dices;</li> <li>C. At least three \\(6\\) with \\(18\\) dices;</li> </ol> <p>The answer is A. Here is the calculation:</p> \\[ P(A) = 1-\\left(\\frac{5}{6}\\right)^6 \\approx 0.665 \\] \\[ P(B) = 1-\\left(\\frac{5}{6}\\right)^{12} - 12\\left(\\frac{5}{6}\\right)^{11} \\frac{1}{6}\\approx 0.619 \\] \\[ P(C) = 1- \\sum\\limits_{k=0}^2 \\binom{18}{k}\\left( \\frac{1}{6}\\right)^k \\left(\\frac{5}{6}\\right)^{18-k} \\approx 0.597 \\]","tags":["Probability Theory"]},{"location":"blog/2024/02/20/havard-stat-101-lecture-4---conditional-probability/#conditional-probability","title":"Conditional Probability","text":"<p>32:35 </p> <p>Definition: Conditional Probability</p> \\[P(A|B) = \\dfrac{P(A\\cap B)}{P(B)}\\]","tags":["Probability Theory"]},{"location":"blog/2024/02/25/ubuntu-%E7%94%9F%E5%AD%98%E6%97%A5%E8%AE%B0/","title":"Ubuntu \u751f\u5b58\u65e5\u8bb0","text":"","tags":["Linux","Ubuntu"]},{"location":"blog/2024/02/25/ubuntu-%E7%94%9F%E5%AD%98%E6%97%A5%E8%AE%B0/#_1","title":"\u5b57\u4f53\u5b89\u88c5","text":"<p>Ubuntu \u4e0a\u7684\u547d\u4ee4\u884c\u5b57\u4f53\u5b89\u88c5\u65b9\u6cd5\uff1a\u6211\u4eec\u5148\u4e0b\u8f7d\u5b57\u4f53\u6587\u4ef6\uff0c\u5047\u8bbe\u67d0\u4e2a\u5b57\u4f53\u6587\u4ef6\u4e3a <code>font.ttf</code> \uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u5148\u79fb\u52a8\u8fd9\u4e2a\u6587\u4ef6\u5230 <code>/usr/share/fonts/</code> \u8fd9\u4e2a\u8def\u5f84\u5f53\u4e2d\uff1a</p> <pre><code>mv font.ttf /usr/share/fonts/\n</code></pre> <p>\u7136\u540e\u9700\u8981\u5efa\u7acb\u5b57\u4f53\u7f13\u5b58\uff0c\u6b64\u65f6\u7684\u547d\u4ee4\u4e3a\uff1a</p> <pre><code>fc-cache -fv\n</code></pre>","tags":["Linux","Ubuntu"]},{"location":"blog/2024/02/25/ubuntu-%E7%94%9F%E5%AD%98%E6%97%A5%E8%AE%B0/#apt","title":"\u5b89\u88c5\u8f6f\u4ef6\uff08\u975e <code>apt</code> \u65b9\u5f0f\uff09","text":"<p>Ubuntu \u80fd\u5b89\u88c5\u7684\u5e94\u7528\u5b89\u88c5\u5305\u4e00\u822c\u53ea\u6709 <code>.deb</code> \u6587\u4ef6\u548c <code>.AppImage</code> \u6587\u4ef6\uff0c\u4e00\u822c\u800c\u8a00\u8f6f\u4ef6\u7684\u4e0b\u8f7d\u5b98\u7f51\u4f1a\u7ed9\u591a\u4e2a\u5b89\u88c5\u5305\u3002</p> <p>\u4f8b\u5982 Obsidian \u5b98\u65b9\u7ed9\u4e86 <code>.AppImage</code> \u8f6f\u4ef6\u548c <code>.deb</code> \u5b89\u88c5\u5305\uff0c\u4f46\u662f\u4e00\u822c\u800c\u8a00 <code>.AppImage</code> \u5176\u5b9e\u66f4\u4e3a\u65b9\u4fbf\uff0c\u53ea\u8981\u7528\u6237\u6743\u9650\u8db3\u591f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u53cc\u51fb\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u5b89\u88c5\u8fd9\u4e00\u4e2a\u7e41\u7410\u7684\u6b65\u9aa4\u3002\uff08\u4ee5 Obsidian \u4e3a\u4f8b\uff0c<code>.deb</code> \u6587\u4ef6\u5b89\u88c5\u7684\u8f6f\u4ef6\u751a\u81f3\u65e0\u6cd5\u4f7f\u7528\u4e2d\u6587\u8f93\u5165\u6cd5\u8f93\u5165\uff0c\u4f46\u662f <code>.AppImage</code> \u7248\u6ca1\u6709\u8fd9\u4e2a Bug\uff09.</p>","tags":["Linux","Ubuntu"]},{"location":"%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/","title":"NKU \u5b9e\u53d8\u51fd\u6570\u7b2c\u4e00\u5468\u4f5c\u4e1a","text":""},{"location":"%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/#_1","title":"\u8bc1\u660e\u5177\u4f53\u96c6\u5408\u4e3a\u53ef\u6570\u96c6","text":"<p>\u7b2c\u4e00\u7ae0T8</p> <p>\u8bbe \\(f\\) \u662f \\(\\mathbb{R}\\) \u4e0a\u7684\u5b9e\u51fd\u6570\uff0c\u82e5\u6709 \\(M&gt;0\\) \uff0c\u4f7f\u5bf9\u4efb\u4f55\u6709\u9650\u4e2a\u4e24\u4e24\u4e0d\u7b49\u7684\u5b9e\u6570 \\(x_1,x_2,\\cdots,x_n\\) \u90fd\u6709\uff1a $$ \\left|\\sum\\limits_{i=1}^n f(x_i)\\right|\\leqslant M $$ \u6c42\u8bc1\uff1a\\(\\left\\lbrace x: f(x)\\neq 0 \\right\\rbrace\\) \u662f\u81f3\u591a\u53ef\u6570\u96c6.</p> <p>\u9996\u5148\uff0c\u4e3a\u8bc1\u660e\u8fd9\u4e2a\u96c6\u5408\u4e3a\u53ef\u6570\u96c6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u66f4\u597d\u5206\u89e3\u7684\u5f62\u5f0f\uff1a</p> \\[ \\left\\lbrace x: f(x)\\neq 0 \\right\\rbrace = \\left\\lbrace x: f(x)&gt;0 \\right\\rbrace \\cup \\left\\lbrace x: f(x)&lt;0 \\right\\rbrace \\] <p>\u6211\u4eec\u4ec5\u9700\u8003\u8651 \\(\\left\\lbrace x: f(x)&gt;0 \\right\\rbrace\\) \u7684\u90e8\u5206\uff0c\u8003\u8651\u76f4\u63a5\u8fdb\u884c\u5982\u4e0b\u7684\u6784\u9020\uff1a</p> \\[ \\left\\lbrace x: f(x)&gt;0 \\right\\rbrace  = \\bigcup_{i=1}^\\infty \\left\\lbrace x: f(x)&gt; \\frac{1}{n} \\right\\rbrace \\] <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u72ec\u7684 \\(\\left\\lbrace \\displaystyle x: f(x)&gt; \\frac{1}{n} \\right\\rbrace\\) \uff0c\u5b83\u90fd\u662f\u6709\u9650\u96c6\uff0c\u5982\u679c\u4e0d\u7136\uff0c\u90a3\u4e48\u53ef\u4ee5\u4ece\u4e2d\u53d6\u51fa \\(nM\\) \u4e2a\u70b9\u4f7f\u5f97</p> \\[ \\sum\\limits_{i=1}^{nM} f(x_i) &gt; M \\] <p>\u51fa\u73b0\u77db\u76fe\uff0c\u56e0\u6b64\u4e0a\u8ff0\u7684\u96c6\u5408\u90fd\u662f\u6709\u9650\u96c6\uff0c\u8fd9\u5c31\u8bf4\u660e\u539f\u96c6\u5408\u662f\u53ef\u6570\u4e2a\u6709\u9650\u96c6\u7684\u5e76\uff0c\u4ece\u800c\u4e3a\u81f3\u591a\u53ef\u6570\u96c6. \\(\\square\\)</p>"},{"location":"%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/#_2","title":"\u5177\u4f53\u53cc\u5c04\u6784\u9020","text":""},{"location":"%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0/%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/#hilbert","title":"Hilbert \u65c5\u9986\u4e0e\u533a\u95f4\u53cc\u5c04","text":"<p>\u7b2c\u4e00\u7ae0 T22(i)</p> <p>\u5177\u4f53\u6784\u9020\u4e0b\u5217\u96c6\u5408\u4e4b\u95f4\u7684\u4e00\u4e2a\u53cc\u5c04\uff1a</p> <p>(i) \\([0,1]\\) \u548c \\((0,1)\\)</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0b Hilbert \u65c5\u9986\u7684\u601d\u60f3\uff1a</p> <ul> <li>\u5f53\u4e00\u4e2a\u5ba2\u4eba\u6765\u5230\u5df2\u7ecf\u4f4f\u6ee1\u4e86\u7684\u65e0\u9650\u65c5\u9986\uff0c\u53ea\u9700\u8981\u8ba9\u6bcf\u4e2a\u5ba2\u4eba\u90fd\u632a\u52a8\u5230\u540e\u4e00\u4e2a\u623f\u95f4\uff1b</li> <li>\u65e0\u9650\u4e2a\u5ba2\u4eba\u6765\u5230\u65f6\uff0c\u53ea\u9700\u8981\u6bcf\u4e2a\u5ba2\u4eba\u90fd\u632a\u52a8\u5230\u81ea\u5df1\u623f\u95f4\u53f7\u4e24\u500d\u7684\u5bf9\u5e94\u623f\u95f4. \u6211\u4eec\u73b0\u5728\u6765\u770b\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u80fd\u53d1\u73b0\u8fd9\u7c7b\u95ee\u9898\u7684\u4e00\u4e2a\u901a\u7528\u89e3\u6cd5\uff1a\u627e\u5230\u5bf9\u5e94\u7684\u6765\u5ba2\uff0c\u5e76\u4e14\u627e\u5230\u9002\u5f53\u7684\u632a\u52a8\u7b56\u7565\u5373\u53ef\u3002</li> </ul> <p>\u89e3\uff1a \u6211\u4eec\u53d1\u73b0 \\(0,1\\) \u662f\u6709\u9650\u7684\u4e24\u4e2a\u6765\u5ba2\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u627e\u5230\u5bf9\u5e94\u7684\u632a\u52a8\u7b56\u7565\u3002\u8bbe\u6620\u5c04\u4e3a \\(f\\) \uff0c\u90a3\u4e48\u6211\u4eec\u9996\u5148\u8bbe \u201c\u65c5\u9986\u201d \u4e3a</p> \\[ A = \\left\\lbrace 0,1,\\frac{1}{2},\\frac{1}{3},\\cdots , \\frac{1}{n},\\cdots \\right\\rbrace \\] <p>\u5bf9 \\(x\\not\\in A\\) \uff0c\u7edf\u4e00 \\(f(x) = x\\) \uff0c\u800c\u5bf9\u4e8e \\(x\\in A\\) \uff0c\u6211\u4eec\u53ea\u9700\u8ba9\u6bcf\u4e2a\u5ba2\u4eba\u5f80\u540e\u632a\u52a8\u4e24\u4f4d\u5373\u53ef\uff1a</p> \\[ f(x) =  \\begin{cases} \\dfrac{1}{2} ,x=0\\\\ \\dfrac{1}{x+2}, x \\in \\mathbb{N}_+ \\\\ \\end{cases} \\] <p>\u6b64\u65f6\u6211\u4eec\u6784\u9020\u7684 \\(f\\) \u5df2\u7ecf\u6ee1\u8db3\u9898\u610f. \\(\\square\\)</p> <p>HINT</p> <p>\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u662f\u6784\u9020\u533a\u95f4\u4e4b\u95f4\u53cc\u5c04\u7684\u901a\u6cd5\uff0c\u53ea\u9700\u8981\u627e\u5230\u201c\u6765\u5ba2\u201d\u548c\u79fb\u52a8\u7b56\u7565\u5373\u53ef.</p> <p>\u62d3\u5c55</p> <p>\u73b0\u5728\u5c06\u6761\u4ef6\u9650\u5236\uff1a\u6211\u4eec\u80fd\u5426\u6784\u9020\u51fa\u4e00\u4e2a\u5bf9\u5e94\u7684\u8fde\u7eed\u53cc\u5c04\uff1f</p>"},{"location":"blog/archive/2024/","title":"2024","text":""}]}